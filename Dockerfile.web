# Multi-stage Dockerfile for BlueBubbles Flutter Web App

# Stage 1: Build the Flutter web app
FROM ubuntu:22.04 AS build

# Install dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    unzip \
    xz-utils \
    zip \
    libglu1-mesa \
    && rm -rf /var/lib/apt/lists/*

# Install Flutter
ARG FLUTTER_VERSION=3.24.0
RUN git clone https://github.com/flutter/flutter.git /flutter \
    && cd /flutter \
    && git checkout ${FLUTTER_VERSION} \
    && /flutter/bin/flutter precache --web

ENV PATH="/flutter/bin:${PATH}"

# Set up the working directory
WORKDIR /app

# Copy pubspec files and get dependencies
COPY pubspec.* ./
RUN flutter pub get

# Copy the rest of the application
COPY . .

# Build the web app
ARG BLUEBUBBLES_HOST
ARG BLUEBUBBLES_PASSWORD
ENV NEXT_PUBLIC_BLUEBUBBLES_HOST=${BLUEBUBBLES_HOST}
ENV NEXT_PUBLIC_BLUEBUBBLES_PASSWORD=${BLUEBUBBLES_PASSWORD}

RUN flutter build web \
    --web-renderer auto \
    --release \
    --dart-define=NEXT_PUBLIC_BLUEBUBBLES_HOST=${NEXT_PUBLIC_BLUEBUBBLES_HOST} \
    --dart-define=NEXT_PUBLIC_BLUEBUBBLES_PASSWORD=${NEXT_PUBLIC_BLUEBUBBLES_PASSWORD}

# Stage 2: Serve the app with nginx
FROM nginx:alpine

# Copy the built app to nginx
COPY --from=build /app/build/web /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --quiet --tries=1 --spider http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
